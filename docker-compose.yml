services:
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile.dev
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    volumes:
      - ./apps/web:/app
      - /app/node_modules # Exclude node_modules
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    networks:
      - app-network

  scan:
    container_name: scan
    build:
      context: .
      dockerfile: ./apps/scan/Dockerfile.dev
    ports:
      - "${SCAN_PORT}:${SCAN_PORT}"
    volumes:
      - ./apps/scan:/app/apps/scan
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  ingredients-recognition:
    container_name: ingredients-recognition
    build:
      context: ./apps/ingredients-recognition
      dockerfile: Dockerfile
    ports:
      - "${INGREDIENTS_RECOGNITION_PORT}:${INGREDIENTS_RECOGNITION_PORT}"
    volumes:
      - ./apps/ingredients-recognition:/app
    env_file:
      - .env
    networks:
      - app-network

  db:
    container_name: db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge