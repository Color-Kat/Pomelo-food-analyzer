services:
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile.dev
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - ./libs:/app/libs
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      - db

#  web:
#    build:
#      context: ./apps/web
#      dockerfile: Dockerfile.dev
#    ports:
#      - "${WEB_PORT}:${WEB_PORT}"
#    volumes:
#      - ./apps/web:/app
#      - /app/node_modules # Exclude node_modules
#    environment:
#      - NODE_ENV=development
#    env_file:
#      - .env

  scan:
    container_name: scan
    build:
      context: .
      dockerfile: ./apps/scan/Dockerfile.dev
    ports:
      - "${SCAN_PORT}:${SCAN_PORT}"
    volumes:
      - ./apps/scan:/app/apps/scan
      - ./libs:/app/libs
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      - db

  ingredients-recognition:
    container_name: ingredients-recognition
    build:
      context: ./apps/ingredients-recognition
      dockerfile: Dockerfile
    ports:
      - "${INGREDIENTS_RECOGNITION_PORT}:${INGREDIENTS_RECOGNITION_PORT}"
    volumes:
      - ./apps/ingredients-recognition:/app
    env_file:
      - .env

  # === Additional services === #

  db:
    container_name: db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 22181
    ports:
      - "22181:22181"

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:22181

volumes:
  postgres_data:
  kafka-data:
